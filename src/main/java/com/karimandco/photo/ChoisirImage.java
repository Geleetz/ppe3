/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.karimandco.photo;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JFileChooser;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author metac
 */
public class ChoisirImage extends javax.swing.JPanel {

    /**
     * Creates new form ChoisirImage
     */
    public JFileChooser jFileChooser;
    public File file = null;

    private Boolean imageOK = false;

    public Boolean getImageOK() {
        return imageOK;
    }

    public void setImageOK(Boolean imageOK) {
        this.imageOK = imageOK;
    }

    public JButton getjButtonSelectFile() {
        return jButtonSelectFile;
    }

    public JLabel getjLabelSuccess() {
        return jLabelSuccess;
    }

    public ChoisirImage() {
        initComponents();
        this.jFileChooser = new JFileChooser();
        this.jFileChooser.setAcceptAllFileFilterUsed(false);
        this.jFileChooser.addChoosableFileFilter(new javax.swing.filechooser.FileFilter() {
            @Override
            public boolean accept(File file) {
                return file.isDirectory() || FilenameUtils.getExtension(file.getAbsolutePath()).equals("jpg") || FilenameUtils.getExtension(file.getAbsolutePath()).equals("bmp") || FilenameUtils.getExtension(file.getAbsolutePath()).equals("jpeg") || FilenameUtils.getExtension(file.getAbsolutePath()).equals("png");
            }

            @Override
            public String getDescription() {
                return "Fichier image (.jpg, .bmp, .jpeg, .png)";
            }
        });
        this.jFileChooser.setFileFilter(this.jFileChooser.getChoosableFileFilters()[0]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonSelectFile = new javax.swing.JButton();
        jLabelSuccess = new javax.swing.JLabel();
        jTextFieldSelect = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jButtonSelectFile.setText("Choisir l'image *");
        jButtonSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectFileActionPerformed(evt);
            }
        });

        jLabelSuccess.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jTextFieldSelect.setEditable(false);
        jTextFieldSelect.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldSelect.setText("Aucun fichier sélectionné");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSuccess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSelectFile)
                    .addComponent(jTextFieldSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectFileActionPerformed
        this.file = null;
        if (this.jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            this.file = this.jFileChooser.getSelectedFile();
            jTextFieldSelect.setText(this.file.getAbsolutePath());
            if (this.file.length() <= 3000000) {
                setImageOK(true);
                afficherImage();
                jLabelSuccess.setForeground(Color.blue);
                jLabelSuccess.setText("Image ok");
            } else {
                setImageOK(false);
                retirerImage();
                jLabelSuccess.setForeground(Color.orange);
                jLabelSuccess.setText("Image trop lourde !!");
            }

        }
    }//GEN-LAST:event_jButtonSelectFileActionPerformed

    public void afficherImage() {
        try {
            InputStream inputStream = this.encodeToBlob();
            if (inputStream != null) {
                byte[] imagebyte = new byte[inputStream.available()];
                inputStream.read(imagebyte);
                jLabel1.setIcon(new ImageIcon(new ImageIcon(imagebyte).getImage().getScaledInstance(250, -1, Image.SCALE_DEFAULT)));
            }
        } catch (IOException ex) {
            Logger.getLogger(ChoisirImage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void afficherImage(InputStream inputStream) {
        try {
            if (inputStream != null) {
                byte[] imagebyte = new byte[inputStream.available()];
                inputStream.read(imagebyte);
                jLabel1.setIcon(new ImageIcon(new ImageIcon(imagebyte).getImage().getScaledInstance(250, -1, Image.SCALE_DEFAULT)));
            }
        } catch (IOException ex) {
            Logger.getLogger(ChoisirImage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public InputStream encodeToBlob() {
        try {
            return new FileInputStream(new File(this.file.getAbsolutePath()));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ChoisirImage.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    private void retirerImage() {
        jLabel1.setIcon(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSelectFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelSuccess;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldSelect;
    // End of variables declaration//GEN-END:variables
}
